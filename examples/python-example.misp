(def substitutedict < d replacement > (
  (return (call dict (for k d (tuple k (andor (in (el d k) replacement) (el replacement (el d k) ) (el d k) ) ) ) ) ) 
) )

(let x {
  ( (string foo) (string bar) )
  ( (string bum) (string butt) )
} )

(let y {
  ( (string butt) (string poo) )
} )

(print (call substitutedict x y) )

